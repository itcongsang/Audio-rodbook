{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport { collection, doc } from 'rxfire/firestore';\nimport { map, switchMap, combineLatest } from 'rxjs/operators';\nimport { db } from \"./firebase.service\";\nimport { of } from 'rxjs';\n\nvar BookAndChannel = function BookAndChannel() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, BookAndChannel);\n\n  this.books = data.books || null;\n  this.nameChannel = data.nameChannel || '';\n};\n\nfunction getAllBooks() {\n  return collection(db.collection('books').limit(12)).pipe(map(function (snapshot) {\n    return snapshot.map(function (doc0) {\n      // console.log(doc0.data());\n      var nameChannel;\n      var books = doc0.data();\n      var channelId = books.channelId;\n      doc(db.collection('channels').doc(channelId)).subscribe(function (v) {\n        // console.log(v.data());\n        nameChannel = v.data().name;\n      }); //return new Book(doc0.data());\n\n      var rs = new BookAndChannel({\n        books: books,\n        nameChannel: nameChannel\n      }); //console.log(rs);\n\n      return rs;\n    });\n  }));\n}\n\nfunction getAllBooks2() {\n  //console.log('function 2')\n  return collection(db.collection('books').limit(12)).pipe(switchMap(function (books) {\n    var channelIds = books.map(function (v) {\n      return v.data()['channelId'];\n    });\n    console.log('log 1 ' + channelIds[0]);\n    return combineLatest(of(books), combineLatest(channelIds.map(function (channelId) {\n      console.log('log 2 ' + channelId);\n      return doc(db.collection('channels').doc(channelId)).pipe(map(function (v) {\n        console.log('log 3 ' + v.data());\n        return v.data()['name'];\n      }));\n    })));\n  }));\n}\n\nexport { getAllBooks, getAllBooks2 };","map":{"version":3,"sources":["D:/SolutionReactJs/SourceDefault/audio-rodbook/services/book.service.ts"],"names":["collection","doc","map","switchMap","combineLatest","db","of","BookAndChannel","data","books","nameChannel","getAllBooks","limit","pipe","snapshot","doc0","channelId","subscribe","v","name","rs","getAllBooks2","channelIds","console","log"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAsE,kBAAtE;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,aAAzB,QAA8C,gBAA9C;AAEA,SAASC,EAAT;AAEA,SAASC,EAAT,QAAmB,MAAnB;;IAEMC,c,GAGJ,0BAA4B;AAAA,MAAhBC,IAAgB,uEAAJ,EAAI;;AAAA;;AAC1B,OAAKC,KAAL,GAAaD,IAAI,CAACC,KAAL,IAAc,IAA3B;AACA,OAAKC,WAAL,GAAmBF,IAAI,CAACE,WAAL,IAAoB,EAAvC;AACD,C;;AAGH,SAASC,WAAT,GAAuB;AACrB,SAAOX,UAAU,CAACK,EAAE,CAACL,UAAH,CAAc,OAAd,EAAuBY,KAAvB,CAA6B,EAA7B,CAAD,CAAV,CAA6CC,IAA7C,CAELX,GAAG,CAAC,UAAAY,QAAQ;AAAA,WACVA,QAAQ,CAACZ,GAAT,CAAa,UAAAa,IAAI,EAAI;AACnB;AACA,UAAIL,WAAJ;AACA,UAAID,KAAK,GAAGM,IAAI,CAACP,IAAL,EAAZ;AACA,UAAIQ,SAAS,GAAGP,KAAK,CAACO,SAAtB;AACAf,MAAAA,GAAG,CAACI,EAAE,CAACL,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8Be,SAA9B,CAAD,CAAH,CAA8CC,SAA9C,CAAwD,UAAAC,CAAC,EAAI;AAC3D;AACAR,QAAAA,WAAW,GAAGQ,CAAC,CAACV,IAAF,GAASW,IAAvB;AACD,OAHD,EALmB,CASnB;;AACA,UAAIC,EAAE,GAAE,IAAIb,cAAJ,CAAmB;AAACE,QAAAA,KAAK,EAALA,KAAD;AAAQC,QAAAA,WAAW,EAAXA;AAAR,OAAnB,CAAR,CAVmB,CAWnB;;AACA,aAAOU,EAAP;AACD,KAbD,CADU;AAAA,GAAT,CAFE,CAAP;AAmBD;;AACD,SAASC,YAAT,GAAwB;AACtB;AACA,SAAOrB,UAAU,CAACK,EAAE,CAACL,UAAH,CAAc,OAAd,EAAuBY,KAAvB,CAA6B,EAA7B,CAAD,CAAV,CAA6CC,IAA7C,CACLV,SAAS,CAAC,UAAAM,KAAK,EAAI;AACjB,QAAMa,UAAU,GAAGb,KAAK,CAACP,GAAN,CAAU,UAAAgB,CAAC;AAAA,aAAIA,CAAC,CAACV,IAAF,GAAS,WAAT,CAAJ;AAAA,KAAX,CAAnB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,UAAU,CAAC,CAAD,CAAjC;AACA,WAAOlB,aAAa,CAACE,EAAE,CAACG,KAAD,CAAH,EAAYL,aAAa,CAACkB,UAAU,CAACpB,GAAX,CAAe,UAAAc,SAAS,EAAI;AACxEO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWR,SAAvB;AACA,aAAOf,GAAG,CAACI,EAAE,CAACL,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8Be,SAA9B,CAAD,CAAH,CAA8CH,IAA9C,CAAmDX,GAAG,CAAC,UAAAgB,CAAC,EAAI;AACjEK,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWN,CAAC,CAACV,IAAF,EAAvB;AACA,eAAOU,CAAC,CAACV,IAAF,GAAS,MAAT,CAAP;AACD,OAH4D,CAAtD,CAAP;AAID,KAN6C,CAAD,CAAzB,CAApB;AAOD,GAVQ,CADJ,CAAP;AAcD;;AAED,SAASG,WAAT,EAAsBU,YAAtB","sourcesContent":["import { collection, doc, collectionChanges, fromCollectionRef } from 'rxfire/firestore';\r\nimport { map, switchMap, combineLatest } from 'rxjs/operators';\r\n\r\nimport { db } from './firebase.service';\r\nimport { Book } from 'models/book';\r\nimport { of } from 'rxjs';\r\n\r\nclass BookAndChannel {\r\n  books: Book;\r\n  nameChannel: string;\r\n  constructor(data: any = {}) {\r\n    this.books = data.books || null;\r\n    this.nameChannel = data.nameChannel || '';\r\n  }\r\n}\r\n\r\nfunction getAllBooks() {\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n   \r\n    map(snapshot =>\r\n      snapshot.map(doc0 => {\r\n        // console.log(doc0.data());\r\n        let nameChannel;\r\n        let books = doc0.data();\r\n        let channelId = books.channelId;\r\n        doc(db.collection('channels').doc(channelId)).subscribe(v => {\r\n          // console.log(v.data());\r\n          nameChannel = v.data().name;\r\n        })\r\n        //return new Book(doc0.data());\r\n        let rs= new BookAndChannel({books, nameChannel});\r\n        //console.log(rs);\r\n        return rs;\r\n      })\r\n    )\r\n  );\r\n}\r\nfunction getAllBooks2() {\r\n  //console.log('function 2')\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n    switchMap(books => {\r\n      const channelIds = books.map(v => v.data()['channelId']);\r\n      console.log('log 1 ' + channelIds[0])\r\n      return combineLatest(of(books), combineLatest(channelIds.map(channelId => {\r\n        console.log('log 2 ' + channelId)\r\n        return doc(db.collection('channels').doc(channelId)).pipe(map(v => {\r\n          console.log('log 3 ' + v.data())\r\n          return v.data()['name'];\r\n        }))\r\n      })))\r\n    }),\r\n    \r\n  );\r\n}\r\n\r\nexport { getAllBooks, getAllBooks2 };\r\n"]},"metadata":{},"sourceType":"module"}