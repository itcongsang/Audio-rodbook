{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport { collection, doc } from 'rxfire/firestore';\nimport { map, switchMap, combineLatest } from 'rxjs/operators';\nimport { db } from \"./firebase.service\";\nimport { Channel } from \"../models/channel\";\nimport { of } from 'rxjs';\n\nvar BookAndChannel = function BookAndChannel() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, BookAndChannel);\n\n  this.books = data.books || null;\n  this.nameChannel = data.nameChannel || '';\n};\n\nfunction getAllBooks() {\n  return collection(db.collection('books').limit(12)).pipe(map(function (snapshot) {\n    return snapshot.map(function (doc0) {\n      // console.log(doc0.data());\n      var books = doc0.data();\n      var channelId = books.channelId;\n      collection(db.collection('channels').where('channelId', '==', channelId)).pipe(map(function (res) {\n        return res.map(function (doc1) {\n          var resChennel = new Channel(doc1.data());\n          var nameCN = resChennel.name;\n          var rs = new BookAndChannel({\n            books: books,\n            nameCN: nameCN\n          });\n          return rs;\n        });\n      }));\n    });\n  }));\n}\n\nfunction getAllBooks2() {\n  //console.log('function 2')\n  return collection(db.collection('books').limit(12)).pipe(switchMap(function (books) {\n    var channelIds = books.map(function (v) {\n      return v.data()['channelId'];\n    });\n    console.log('log 1 ' + channelIds[0]);\n    return combineLatest(of(books), combineLatest(channelIds.map(function (channelId) {\n      console.log('log 2 ' + channelId);\n      doc(db.collection('channels').doc(channelId)).pipe(map(function (v) {\n        console.log('log 3 ' + v);\n        return v.data()['name'];\n      }));\n    })));\n  }));\n}\n\nexport { getAllBooks, getAllBooks2 };","map":{"version":3,"sources":["D:/SolutionReactJs/SourceDefault/audio-rodbook/services/book.service.ts"],"names":["collection","doc","map","switchMap","combineLatest","db","Channel","of","BookAndChannel","data","books","nameChannel","getAllBooks","limit","pipe","snapshot","doc0","channelId","where","res","doc1","resChennel","nameCN","name","rs","getAllBooks2","channelIds","v","console","log"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAkF,kBAAlF;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,aAAzB,QAA8C,gBAA9C;AAEA,SAASC,EAAT;AAEA,SAASC,OAAT;AACA,SAASC,EAAT,QAAmB,MAAnB;;IAEMC,c,GAGJ,0BAA4B;AAAA,MAAhBC,IAAgB,uEAAJ,EAAI;;AAAA;;AAC1B,OAAKC,KAAL,GAAaD,IAAI,CAACC,KAAL,IAAc,IAA3B;AACA,OAAKC,WAAL,GAAmBF,IAAI,CAACE,WAAL,IAAoB,EAAvC;AACD,C;;AAGH,SAASC,WAAT,GAAuB;AACrB,SAAOZ,UAAU,CAACK,EAAE,CAACL,UAAH,CAAc,OAAd,EAAuBa,KAAvB,CAA6B,EAA7B,CAAD,CAAV,CAA6CC,IAA7C,CACLZ,GAAG,CAAC,UAAAa,QAAQ;AAAA,WACVA,QAAQ,CAACb,GAAT,CAAa,UAAAc,IAAI,EAAI;AACnB;AACA,UAAIN,KAAK,GAAGM,IAAI,CAACP,IAAL,EAAZ;AACA,UAAIQ,SAAS,GAAGP,KAAK,CAACO,SAAtB;AACAjB,MAAAA,UAAU,CAACK,EAAE,CAACL,UAAH,CAAc,UAAd,EAA0BkB,KAA1B,CAAgC,WAAhC,EAA4C,IAA5C,EAAiDD,SAAjD,CAAD,CAAV,CAAwEH,IAAxE,CACEZ,GAAG,CAAC,UAAAiB,GAAG;AAAA,eAAEA,GAAG,CAACjB,GAAJ,CAAQ,UAAAkB,IAAI,EAAE;AACrB,cAAIC,UAAU,GAAC,IAAIf,OAAJ,CAAYc,IAAI,CAACX,IAAL,EAAZ,CAAf;AACA,cAAIa,MAAM,GAACD,UAAU,CAACE,IAAtB;AACA,cAAIC,EAAE,GAAE,IAAIhB,cAAJ,CAAmB;AAACE,YAAAA,KAAK,EAALA,KAAD;AAAQY,YAAAA,MAAM,EAANA;AAAR,WAAnB,CAAR;AACA,iBAAOE,EAAP;AACD,SALQ,CAAF;AAAA,OAAJ,CADL;AAQD,KAZD,CADU;AAAA,GAAT,CADE,CAAP;AAiBD;;AAGD,SAASC,YAAT,GAAwB;AACtB;AACA,SAAOzB,UAAU,CAACK,EAAE,CAACL,UAAH,CAAc,OAAd,EAAuBa,KAAvB,CAA6B,EAA7B,CAAD,CAAV,CAA6CC,IAA7C,CACLX,SAAS,CAAC,UAAAO,KAAK,EAAI;AACjB,QAAMgB,UAAU,GAAGhB,KAAK,CAACR,GAAN,CAAU,UAAAyB,CAAC;AAAA,aAAIA,CAAC,CAAClB,IAAF,GAAS,WAAT,CAAJ;AAAA,KAAX,CAAnB;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWH,UAAU,CAAC,CAAD,CAAjC;AACA,WAAOtB,aAAa,CAACG,EAAE,CAACG,KAAD,CAAH,EAAYN,aAAa,CAACsB,UAAU,CAACxB,GAAX,CAAe,UAAAe,SAAS,EAAI;AACxEW,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWZ,SAAvB;AACAhB,MAAAA,GAAG,CAACI,EAAE,CAACL,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BgB,SAA9B,CAAD,CAAH,CAA8CH,IAA9C,CAAmDZ,GAAG,CAAC,UAAAyB,CAAC,EAAI;AAC1DC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,CAAvB;AACA,eAAOA,CAAC,CAAClB,IAAF,GAAS,MAAT,CAAP;AACD,OAHqD,CAAtD;AAID,KAN6C,CAAD,CAAzB,CAApB;AAOD,GAVQ,CADJ,CAAP;AAcD;;AAED,SAASG,WAAT,EAAsBa,YAAtB","sourcesContent":["import { collection, doc, collectionChanges, fromCollectionRef, fromDocRef } from 'rxfire/firestore';\r\nimport { map, switchMap, combineLatest } from 'rxjs/operators';\r\n\r\nimport { db } from './firebase.service';\r\nimport { Book } from 'models/book';\r\nimport { Channel } from 'models/channel';\r\nimport { of } from 'rxjs';\r\n\r\nclass BookAndChannel {\r\n  books: Book;\r\n  nameChannel: string;\r\n  constructor(data: any = {}) {\r\n    this.books = data.books || null;\r\n    this.nameChannel = data.nameChannel || '';\r\n  }\r\n}\r\n\r\nfunction getAllBooks() {\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n    map(snapshot =>\r\n      snapshot.map(doc0 => {\r\n        // console.log(doc0.data());\r\n        let books = doc0.data();\r\n        let channelId = books.channelId;\r\n        collection(db.collection('channels').where('channelId','==',channelId)).pipe(\r\n          map(res=>res.map(doc1=>{\r\n            let resChennel=new Channel(doc1.data());\r\n            var nameCN=resChennel.name;\r\n            let rs= new BookAndChannel({books, nameCN});\r\n            return rs;\r\n          }))\r\n        )\r\n      })\r\n    )\r\n  );\r\n}\r\n\r\n\r\nfunction getAllBooks2() {\r\n  //console.log('function 2')\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n    switchMap(books => {\r\n      const channelIds = books.map(v => v.data()['channelId']);\r\n      console.log('log 1 ' + channelIds[0])\r\n      return combineLatest(of(books), combineLatest(channelIds.map(channelId => {\r\n        console.log('log 2 ' + channelId)\r\n        doc(db.collection('channels').doc(channelId)).pipe(map(v => {\r\n          console.log('log 3 ' + v);\r\n          return v.data()['name'];\r\n        }))\r\n      })))\r\n    }),\r\n    \r\n  );\r\n}\r\n\r\nexport { getAllBooks, getAllBooks2 };\r\n"]},"metadata":{},"sourceType":"module"}