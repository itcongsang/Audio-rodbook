{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport { collection } from 'rxfire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\nimport { db } from \"./firebase.service\";\nimport { Book } from \"../models/book\";\nimport { Channel } from \"../models/channel\";\nimport { of, combineLatest } from 'rxjs';\nimport { uniq } from 'lodash';\n\nvar BookAndChannel =\n/*#__PURE__*/\nfunction (_Book) {\n  _inherits(BookAndChannel, _Book);\n\n  function BookAndChannel() {\n    var _this;\n\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BookAndChannel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookAndChannel).call(this, data));\n    _this.channelName = data.channelName || '';\n    return _this;\n  }\n\n  return BookAndChannel;\n}(Book);\n\nfunction getAllBooks() {\n  var res = collection(db.collection('books').limit(12)).pipe(switchMap(function (snapshot) {\n    return snapshot.map(function (doc0) {\n      var rsd = new Book(doc0.data());\n      return combineLatest(of(rsd), GetChanelName(doc0.data())).pipe(map(function (val) {\n        var ob = new BookAndChannel({\n          books: val[0],\n          nameChannel: val[1][0]\n        });\n        return ob;\n      }));\n    });\n  }), map(function (val) {\n    return val;\n  }));\n  return res;\n}\n\nfunction GetChanelName(object) {\n  var rs = new Book(object);\n  var channelId = rs.channelId;\n  var res = collection(db.collection('channels').where('channelId', '==', channelId)).pipe(map(function (res) {\n    return res.map(function (doc1) {\n      var resChennel = new Channel(doc1.data());\n      return resChennel.name;\n    });\n  }));\n  return res;\n}\n\nfunction getAllBooks2() {\n  return collection(db.collection('books').limit(12)).pipe(switchMap(function (books) {\n    var channelIds = uniq(books.map(function (v) {\n      return v.data()['channelId'];\n    }));\n    console.log('id ', channelIds);\n    return combineLatest(of(books), combineLatest(channelIds.map(function (channelId) {\n      return collection(db.collection('channels').where('channelId', '==', channelId)).pipe(map(function (v) {\n        return v[0];\n      }));\n    })));\n  }), map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        books = _ref2[0],\n        channels = _ref2[1];\n\n    console.log('channel ', channels[0].data());\n    return books.map(function (book) {\n      var bookDoc = book.data();\n      var channel = channels.find(function (o) {\n        return o.data().id === bookDoc.channelId;\n      });\n      var data = channel.data();\n      return new Book(_objectSpread({}, bookDoc, {\n        channelName: typeof data === 'object' ? channel.data().name : ''\n      }));\n    });\n  }));\n}\n\nexport { getAllBooks, getAllBooks2 };","map":{"version":3,"sources":["/Users/apple/Desktop/rodbookHub/Audio-rodbook/services/book.service.ts"],"names":["collection","map","switchMap","db","Book","Channel","of","combineLatest","uniq","BookAndChannel","data","channelName","getAllBooks","res","limit","pipe","snapshot","doc0","rsd","GetChanelName","val","ob","books","nameChannel","object","rs","channelId","where","doc1","resChennel","name","getAllBooks2","channelIds","v","console","log","channels","book","bookDoc","channel","find","o","id"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAAkF,kBAAlF;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+D,gBAA/D;AAEA,SAASC,EAAT;AACA,SAASC,IAAT;AACA,SAASC,OAAT;AACA,SAASC,EAAT,EAA8BC,aAA9B,QAAgE,MAAhE;AACA,SAASC,IAAT,QAAqB,QAArB;;IAEMC,c;;;;;AAEJ,4BAA4B;AAAA;;AAAA,QAAhBC,IAAgB,uEAAJ,EAAI;;AAAA;;AAC1B,wFAAMA,IAAN;AACA,UAAKC,WAAL,GAAmBD,IAAI,CAACC,WAAL,IAAoB,EAAvC;AAF0B;AAG3B;;;EAL0BP,I;;AAQ7B,SAASQ,WAAT,GAAuB;AACrB,MAAIC,GAAG,GAAEb,UAAU,CAACG,EAAE,CAACH,UAAH,CAAc,OAAd,EAAuBc,KAAvB,CAA6B,EAA7B,CAAD,CAAV,CAA6CC,IAA7C,CACPb,SAAS,CAAC,UAAAc,QAAQ;AAAA,WAChBA,QAAQ,CAACf,GAAT,CAAa,UAAAgB,IAAI,EAAI;AACnB,UAAMC,GAAG,GAAE,IAAId,IAAJ,CAASa,IAAI,CAACP,IAAL,EAAT,CAAX;AACA,aAAOH,aAAa,CAACD,EAAE,CAACY,GAAD,CAAH,EAAUC,aAAa,CAACF,IAAI,CAACP,IAAL,EAAD,CAAvB,CAAb,CAAmDK,IAAnD,CACLd,GAAG,CAAC,UAAAmB,GAAG,EAAE;AACP,YAAIC,EAAE,GAAC,IAAIZ,cAAJ,CAAmB;AAACa,UAAAA,KAAK,EAAEF,GAAG,CAAC,CAAD,CAAX;AAAgBG,UAAAA,WAAW,EAAEH,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP;AAA7B,SAAnB,CAAP;AACA,eAAOC,EAAP;AACD,OAHE,CADE,CAAP;AAMD,KARD,CADgB;AAAA,GAAT,CADF,EAWJpB,GAAG,CAAC,UAAAmB,GAAG,EAAE;AAAC,WAAOA,GAAP;AAAW,GAAlB,CAXC,CAAT;AAaA,SAAOP,GAAP;AACD;;AAED,SAASM,aAAT,CAAuBK,MAAvB,EAA8B;AAC5B,MAAIC,EAAE,GAAE,IAAIrB,IAAJ,CAASoB,MAAT,CAAR;AACA,MAAIE,SAAS,GAAGD,EAAE,CAACC,SAAnB;AACA,MAAIb,GAAG,GAAEb,UAAU,CAACG,EAAE,CAACH,UAAH,CAAc,UAAd,EAA0B2B,KAA1B,CAAgC,WAAhC,EAA6C,IAA7C,EAAmDD,SAAnD,CAAD,CAAV,CAA0EX,IAA1E,CACPd,GAAG,CAAC,UAAAY,GAAG;AAAA,WAAIA,GAAG,CAACZ,GAAJ,CAAQ,UAAA2B,IAAI,EAAI;AACzB,UAAIC,UAAU,GAAG,IAAIxB,OAAJ,CAAYuB,IAAI,CAAClB,IAAL,EAAZ,CAAjB;AACA,aAAOmB,UAAU,CAACC,IAAlB;AACD,KAHU,CAAJ;AAAA,GAAJ,CADI,CAAT;AAMA,SAAOjB,GAAP;AACD;;AAGD,SAASkB,YAAT,GAAwB;AACtB,SAAO/B,UAAU,CAACG,EAAE,CAACH,UAAH,CAAc,OAAd,EAAuBc,KAAvB,CAA6B,EAA7B,CAAD,CAAV,CAA6CC,IAA7C,CACLb,SAAS,CAAC,UAAAoB,KAAK,EAAI;AACjB,QAAMU,UAAU,GAAGxB,IAAI,CAACc,KAAK,CAACrB,GAAN,CAAU,UAAAgC,CAAC;AAAA,aAAIA,CAAC,CAACvB,IAAF,GAAS,WAAT,CAAJ;AAAA,KAAX,CAAD,CAAvB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,UAAnB;AACA,WAAOzB,aAAa,CAClBD,EAAE,CAACgB,KAAD,CADgB,EAElBf,aAAa,CACXyB,UAAU,CAAC/B,GAAX,CAAe,UAAAyB,SAAS;AAAA,aACtB1B,UAAU,CAACG,EAAE,CAACH,UAAH,CAAc,UAAd,EAA0B2B,KAA1B,CAAgC,WAAhC,EAA6C,IAA7C,EAAmDD,SAAnD,CAAD,CAAV,CAA0EX,IAA1E,CAA+Ed,GAAG,CAAC,UAAAgC,CAAC;AAAA,eAAIA,CAAC,CAAC,CAAD,CAAL;AAAA,OAAF,CAAlF,CADsB;AAAA,KAAxB,CADW,CAFK,CAApB;AAQD,GAXQ,CADJ,EAaLhC,GAAG,CAAC,gBAAuB;AAAA;AAAA,QAArBqB,KAAqB;AAAA,QAAdc,QAAc;;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAQ,CAAC,CAAD,CAAR,CAAY1B,IAAZ,EAAxB;AACA,WAAOY,KAAK,CAACrB,GAAN,CAAU,UAAAoC,IAAI,EAAI;AACvB,UAAMC,OAAO,GAAGD,IAAI,CAAC3B,IAAL,EAAhB;AACA,UAAI6B,OAAO,GAAIH,QAAQ,CAACI,IAAT,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAAC/B,IAAF,GAASgC,EAAT,KAAgBJ,OAAO,CAACZ,SAA5B;AAAA,OAAf,CAAf;AACA,UAAIhB,IAAI,GAAG6B,OAAO,CAAC7B,IAAR,EAAX;AAEA,aAAO,IAAIN,IAAJ,mBACFkC,OADE;AAEL3B,QAAAA,WAAW,EAAE,OAAOD,IAAP,KAAgB,QAAhB,GAA2B6B,OAAO,CAAC7B,IAAR,GAAeoB,IAA1C,GAAiD;AAFzD,SAAP;AAID,KATM,CAAP;AAUD,GAZE,CAbE,CAAP;AA2BD;;AAED,SAASlB,WAAT,EAAsBmB,YAAtB","sourcesContent":["import { collection, doc, collectionChanges, fromCollectionRef, fromDocRef } from 'rxfire/firestore';\nimport { map, switchMap, mergeMap, mergeAll, combineAll } from 'rxjs/operators';\n\nimport { db } from './firebase.service';\nimport { Book } from 'models/book';\nimport { Channel } from 'models/channel';\nimport { of, BehaviorSubject, combineLatest, from, merge } from 'rxjs';\nimport { uniq } from 'lodash';\n\nclass BookAndChannel extends Book {\n  channelName:string;\n  constructor(data: any = {}) {\n    super(data);\n    this.channelName = data.channelName || '';\n  }\n}\n\nfunction getAllBooks() {\n  let res= collection(db.collection('books').limit(12)).pipe(\n    switchMap(snapshot =>\n      snapshot.map(doc0 => {\n        const rsd= new Book(doc0.data());\n        return combineLatest(of(rsd), GetChanelName(doc0.data())).pipe(\n          map(val=>{\n            let ob=new BookAndChannel({books: val[0], nameChannel: val[1][0]})\n            return ob;\n          })\n        )\n      }),\n    ), map(val=>{return val})\n  );\n  return res;\n}\n\nfunction GetChanelName(object){\n  let rs= new Book(object);\n  let channelId = rs.channelId;\n  let res= collection(db.collection('channels').where('channelId', '==', channelId)).pipe(\n    map(res => res.map(doc1 => {\n      let resChennel = new Channel(doc1.data());\n      return resChennel.name;\n    }))\n  );\n  return res;\n}\n\n\nfunction getAllBooks2() {\n  return collection(db.collection('books').limit(12)).pipe(\n    switchMap(books => {\n      const channelIds = uniq(books.map(v => v.data()['channelId']));\n      console.log('id ', channelIds)\n      return combineLatest(\n        of(books),\n        combineLatest(\n          channelIds.map(channelId =>\n            collection(db.collection('channels').where('channelId', '==', channelId)).pipe(map(v => v[0]))\n          )\n        )\n      );\n    }),\n    map(([books, channels]) => {\n      console.log('channel ', channels[0].data());\n      return books.map(book => {\n        const bookDoc = book.data();\n        let channel = (channels.find(o => o.data().id === bookDoc.channelId));\n        let data = channel.data();\n\n        return new Book({\n          ...bookDoc,\n          channelName: typeof data === 'object' ? channel.data().name : '',\n        });\n      });\n    })\n  );\n}\n\nexport { getAllBooks, getAllBooks2 };\n"]},"metadata":{},"sourceType":"module"}