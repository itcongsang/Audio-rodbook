{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { RESET_POSTS_DOABLES, FETCH_POSTS, FETCH_POSTS_SUCCESS, FETCH_POSTS_ERROR, FETCH_POST_COMMENTS, FETCH_POST_COMMENTS_SUCESS, FETCH_POST_COMMENTS_ERROR, TOGGLE_POSTS_BOOLEANABLE_STATE, TOGGLE_POSTS_ERRABLE_STATE, TOGGLE_POSTS_SUCCESSIBLE_STATE } from \"./constants\";\nimport { reducerPayloadDoableHelper } from \"../rootReducer\";\nvar initialState = {\n  posts: [],\n  comments: [],\n  errable: {},\n  booleanable: {},\n  successible: {},\n  selectedPostId: ''\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      incomingPayload = _ref.payload;\n\n  var payload = type === RESET_POSTS_DOABLES ? incomingPayload : reducerPayloadDoableHelper(state, incomingPayload);\n\n  switch (type) {\n    case FETCH_POSTS:\n    case FETCH_POSTS_SUCCESS:\n    case FETCH_POSTS_ERROR:\n    case FETCH_POST_COMMENTS:\n    case FETCH_POST_COMMENTS_ERROR:\n    case TOGGLE_POSTS_BOOLEANABLE_STATE:\n    case TOGGLE_POSTS_ERRABLE_STATE:\n    case TOGGLE_POSTS_SUCCESSIBLE_STATE:\n      return _objectSpread({}, state, payload);\n\n    case FETCH_POST_COMMENTS_SUCESS:\n      {\n        var comments = payload ? payload.comments : [];\n        return _objectSpread({}, state, {\n          isFetchingPostComments: false,\n          comments: [].concat(_toConsumableArray(state.comments), _toConsumableArray(comments))\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/apple/Desktop/rodbookHub/Audio-rodbook/redux-store/posts/reducer.ts"],"names":["RESET_POSTS_DOABLES","FETCH_POSTS","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","FETCH_POST_COMMENTS","FETCH_POST_COMMENTS_SUCESS","FETCH_POST_COMMENTS_ERROR","TOGGLE_POSTS_BOOLEANABLE_STATE","TOGGLE_POSTS_ERRABLE_STATE","TOGGLE_POSTS_SUCCESSIBLE_STATE","reducerPayloadDoableHelper","initialState","posts","comments","errable","booleanable","successible","selectedPostId","state","type","incomingPayload","payload","isFetchingPostComments"],"mappings":";;AACA,SACEA,mBADF,EAEEC,WAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,mBALF,EAMEC,0BANF,EAOEC,yBAPF,EAQEC,8BARF,EASEC,0BATF,EAUEC,8BAVF;AAYA,SAASC,0BAAT;AAEA,IAAMC,YAAyB,GAAG;AAChCC,EAAAA,KAAK,EAAE,EADyB;AAEhCC,EAAAA,QAAQ,EAAE,EAFsB;AAGhCC,EAAAA,OAAO,EAAE,EAHuB;AAIhCC,EAAAA,WAAW,EAAE,EAJmB;AAKhCC,EAAAA,WAAW,EAAE,EALmB;AAMhCC,EAAAA,cAAc,EAAE;AANgB,CAAlC;AASA,gBAAe,YAGV;AAAA,MAFHC,KAEG,uEAFkBP,YAElB;;AAAA;AAAA,MADDQ,IACC,QADDA,IACC;AAAA,MADcC,eACd,QADKC,OACL;;AACH,MAAMA,OAAO,GACXF,IAAI,KAAKnB,mBAAT,GACIoB,eADJ,GAEKV,0BAA0B,CAACQ,KAAD,EAAQE,eAAR,CAHjC;;AAKA,UAAQD,IAAR;AACE,SAAKlB,WAAL;AACA,SAAKC,mBAAL;AACA,SAAKC,iBAAL;AACA,SAAKC,mBAAL;AACA,SAAKE,yBAAL;AACA,SAAKC,8BAAL;AACA,SAAKC,0BAAL;AACA,SAAKC,8BAAL;AACE,+BACKS,KADL,EAEKG,OAFL;;AAIF,SAAKhB,0BAAL;AAAiC;AAC/B,YAAMQ,QAAQ,GAAGQ,OAAO,GAAGA,OAAO,CAACR,QAAX,GAAsB,EAA9C;AAEA,iCACKK,KADL;AAEEI,UAAAA,sBAAsB,EAAE,KAF1B;AAGET,UAAAA,QAAQ,+BAAMK,KAAK,CAACL,QAAZ,sBAAyBA,QAAzB;AAHV;AAKD;;AACD;AACE,aAAOK,KAAP;AAvBJ;AAyBD,CAlCD","sourcesContent":["import { IPostsState } from './state';\nimport {\n  RESET_POSTS_DOABLES,\n  FETCH_POSTS,\n  FETCH_POSTS_SUCCESS,\n  FETCH_POSTS_ERROR,\n  FETCH_POST_COMMENTS,\n  FETCH_POST_COMMENTS_SUCESS,\n  FETCH_POST_COMMENTS_ERROR,\n  TOGGLE_POSTS_BOOLEANABLE_STATE,\n  TOGGLE_POSTS_ERRABLE_STATE,\n  TOGGLE_POSTS_SUCCESSIBLE_STATE,\n} from './constants';\nimport { reducerPayloadDoableHelper } from 'redux-store/rootReducer';\n\nconst initialState: IPostsState = {\n  posts: [],\n  comments: [],\n  errable: {},\n  booleanable: {},\n  successible: {},\n  selectedPostId: '',\n};\n\nexport default (\n  state: IPostsState = initialState,\n  { type, payload: incomingPayload }: ReduxActions.Action<IPostsState>\n) => {\n  const payload =\n    type === RESET_POSTS_DOABLES\n      ? incomingPayload\n      : (reducerPayloadDoableHelper(state, incomingPayload) as IPostsState);\n\n  switch (type) {\n    case FETCH_POSTS:\n    case FETCH_POSTS_SUCCESS:\n    case FETCH_POSTS_ERROR:\n    case FETCH_POST_COMMENTS:\n    case FETCH_POST_COMMENTS_ERROR:\n    case TOGGLE_POSTS_BOOLEANABLE_STATE:\n    case TOGGLE_POSTS_ERRABLE_STATE:\n    case TOGGLE_POSTS_SUCCESSIBLE_STATE:\n      return {\n        ...state,\n        ...payload,\n      };\n    case FETCH_POST_COMMENTS_SUCESS: {\n      const comments = payload ? payload.comments : [];\n\n      return {\n        ...state,\n        isFetchingPostComments: false,\n        comments: [...state.comments, ...comments],\n      };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}