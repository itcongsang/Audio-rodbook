{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport { collection, doc, collectionChanges } from 'rxfire/firestore';\nimport { map, switchMap, combineLatest } from 'rxjs/operators';\nimport { db } from \"./firebase.service\";\n\nvar BookAndChannel = function BookAndChannel() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, BookAndChannel);\n\n  this.books = data.books || null;\n  this.nameChannel = data.nameChannel || '';\n};\n\nfunction getAllBooks() {\n  return collection(db.collection('books').limit(12)).pipe(map(function (snapshot) {\n    return snapshot.map(function (doc0) {\n      // console.log(doc0.data());\n      var nameChannel;\n      var books = doc0.data();\n      var channelId = books.channelId;\n      doc(db.collection('channels').doc(channelId)).subscribe(function (v) {\n        // console.log(v.data());\n        nameChannel = v.data().name;\n      }); //return new Book(doc0.data());\n\n      var rs = new BookAndChannel({\n        books: books,\n        nameChannel: nameChannel\n      });\n      console.log(rs);\n      return rs;\n    });\n  }));\n}\n\nfunction getAllBooks2() {\n  collectionChanges(db.collection('books')).pipe(switchMap(function (books) {\n    var channelIds = books.map(function (v) {\n      return v.doc.data()['channelId'];\n    });\n    return combineLatest(books, combineLatest(channelIds.map(function (channelId) {\n      doc(db.collection('channels').doc(channelId)).pipe(map(function (v) {\n        return v.data()['name'];\n      }));\n    })));\n  }), map(function (books, name) {\n    console.log(books);\n    return {\n      books: books,\n      name: name\n    };\n  }));\n}\n\nexport { getAllBooks, getAllBooks2 };","map":{"version":3,"sources":["D:/SolutionReactJs/SourceDefault/audio-rodbook/services/book.service.ts"],"names":["collection","doc","collectionChanges","map","switchMap","combineLatest","db","BookAndChannel","data","books","nameChannel","getAllBooks","limit","pipe","snapshot","doc0","channelId","subscribe","v","name","rs","console","log","getAllBooks2","channelIds"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,iBAA1B,QAAmD,kBAAnD;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,aAAzB,QAA8C,gBAA9C;AAEA,SAASC,EAAT;;IAGMC,c,GAGJ,0BAA4B;AAAA,MAAhBC,IAAgB,uEAAJ,EAAI;;AAAA;;AAC1B,OAAKC,KAAL,GAAaD,IAAI,CAACC,KAAL,IAAc,IAA3B;AACA,OAAKC,WAAL,GAAmBF,IAAI,CAACE,WAAL,IAAoB,EAAvC;AACD,C;;AAGH,SAASC,WAAT,GAAuB;AACrB,SAAOX,UAAU,CAACM,EAAE,CAACN,UAAH,CAAc,OAAd,EAAuBY,KAAvB,CAA6B,EAA7B,CAAD,CAAV,CAA6CC,IAA7C,CAELV,GAAG,CAAC,UAAAW,QAAQ;AAAA,WACVA,QAAQ,CAACX,GAAT,CAAa,UAAAY,IAAI,EAAI;AACnB;AACA,UAAIL,WAAJ;AACA,UAAID,KAAK,GAAGM,IAAI,CAACP,IAAL,EAAZ;AACA,UAAIQ,SAAS,GAAGP,KAAK,CAACO,SAAtB;AACAf,MAAAA,GAAG,CAACK,EAAE,CAACN,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8Be,SAA9B,CAAD,CAAH,CAA8CC,SAA9C,CAAwD,UAAAC,CAAC,EAAI;AAC3D;AACAR,QAAAA,WAAW,GAAGQ,CAAC,CAACV,IAAF,GAASW,IAAvB;AACD,OAHD,EALmB,CASnB;;AACA,UAAIC,EAAE,GAAE,IAAIb,cAAJ,CAAmB;AAACE,QAAAA,KAAK,EAALA,KAAD;AAAQC,QAAAA,WAAW,EAAXA;AAAR,OAAnB,CAAR;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,aAAOA,EAAP;AACD,KAbD,CADU;AAAA,GAAT,CAFE,CAAP;AAmBD;;AACD,SAASG,YAAT,GAAwB;AACtBrB,EAAAA,iBAAiB,CAACI,EAAE,CAACN,UAAH,CAAc,OAAd,CAAD,CAAjB,CAA0Ca,IAA1C,CACET,SAAS,CAAC,UAAAK,KAAK,EAAI;AACjB,QAAMe,UAAU,GAAGf,KAAK,CAACN,GAAN,CAAU,UAAAe,CAAC;AAAA,aAAIA,CAAC,CAACjB,GAAF,CAAMO,IAAN,GAAa,WAAb,CAAJ;AAAA,KAAX,CAAnB;AACA,WAAOH,aAAa,CAACI,KAAD,EAAQJ,aAAa,CAACmB,UAAU,CAACrB,GAAX,CAAe,UAAAa,SAAS,EAAI;AACpEf,MAAAA,GAAG,CAACK,EAAE,CAACN,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8Be,SAA9B,CAAD,CAAH,CAA8CH,IAA9C,CAAmDV,GAAG,CAAC,UAAAe,CAAC,EAAI;AAC1D,eAAOA,CAAC,CAACV,IAAF,GAAS,MAAT,CAAP;AACD,OAFqD,CAAtD;AAGD,KAJyC,CAAD,CAArB,CAApB;AAKD,GAPQ,CADX,EASEL,GAAG,CAAC,UAACM,KAAD,EAAQU,IAAR,EAAiB;AACnBE,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,WAAO;AAACA,MAAAA,KAAK,EAALA,KAAD;AAAQU,MAAAA,IAAI,EAAJA;AAAR,KAAP;AACD,GAHE,CATL;AAcD;;AAED,SAASR,WAAT,EAAsBY,YAAtB","sourcesContent":["import { collection, doc, collectionChanges } from 'rxfire/firestore';\r\nimport { map, switchMap, combineLatest } from 'rxjs/operators';\r\n\r\nimport { db } from './firebase.service';\r\nimport { Book } from 'models/book';\r\n\r\nclass BookAndChannel {\r\n  books: Book;\r\n  nameChannel: string;\r\n  constructor(data: any = {}) {\r\n    this.books = data.books || null;\r\n    this.nameChannel = data.nameChannel || '';\r\n  }\r\n}\r\n\r\nfunction getAllBooks() {\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n   \r\n    map(snapshot =>\r\n      snapshot.map(doc0 => {\r\n        // console.log(doc0.data());\r\n        let nameChannel;\r\n        let books = doc0.data();\r\n        let channelId = books.channelId;\r\n        doc(db.collection('channels').doc(channelId)).subscribe(v => {\r\n          // console.log(v.data());\r\n          nameChannel = v.data().name;\r\n        })\r\n        //return new Book(doc0.data());\r\n        let rs= new BookAndChannel({books, nameChannel});\r\n        console.log(rs);\r\n        return rs;\r\n      })\r\n    )\r\n  );\r\n}\r\nfunction getAllBooks2() {\r\n  collectionChanges(db.collection('books')).pipe(\r\n    switchMap(books => {\r\n      const channelIds = books.map(v => v.doc.data()['channelId']);\r\n      return combineLatest(books, combineLatest(channelIds.map(channelId => {\r\n        doc(db.collection('channels').doc(channelId)).pipe(map(v => {\r\n          return v.data()['name'];\r\n        }))\r\n      })))\r\n    }),\r\n    map((books, name) => {\r\n      console.log(books)\r\n      return {books, name}\r\n    })\r\n  );\r\n}\r\n\r\nexport { getAllBooks, getAllBooks2 };\r\n"]},"metadata":{},"sourceType":"module"}