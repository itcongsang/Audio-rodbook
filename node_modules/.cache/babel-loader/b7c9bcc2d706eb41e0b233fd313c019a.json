{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport { collection } from 'rxfire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\nimport { db } from \"./firebase.service\";\nimport { Book } from \"../models/book\";\nimport { Channel } from \"../models/channel\";\nimport { of, combineLatest } from 'rxjs';\n\nvar BookAndChannel = function BookAndChannel() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, BookAndChannel);\n\n  this.books = data.books || null;\n  this.nameChannel = data.nameChannel || '';\n};\n\nfunction getAllBooks() {\n  var res = collection(db.collection('books').limit(12)).pipe(map(function (snapshot) {\n    return snapshot.map(function (doc0) {\n      var rsd = new Book(doc0.data());\n      return combineLatest(of(rsd), GetChanelName(doc0.data())).pipe(map(function (val) {\n        var ob = new BookAndChannel({\n          books: val[0],\n          nameChannel: val[1]\n        });\n        return ob;\n      }));\n    });\n  }));\n  return res;\n}\n\nfunction GetChanelName(object) {\n  var rs = new Book(object);\n  var channelId = rs.channelId;\n  var res = collection(db.collection('channels').where('channelId', '==', channelId)).pipe(map(function (res) {\n    return res.map(function (doc1) {\n      var resChennel = new Channel(doc1.data());\n      return resChennel.name;\n    });\n  }));\n  return res;\n}\n\nfunction getAllBooks2() {\n  console.log('function 2');\n  return collection(db.collection('books').limit(12)).pipe(switchMap(function (books) {\n    var channelIds = books.map(function (v) {\n      return v.data()['channelId'];\n    });\n    console.log('log 1 ' + channelIds[0]);\n    var books2 = books.map(function (v) {\n      return v.data();\n    });\n    return combineLatest(of(books2), combineLatest(channelIds.map(function (channelId) {\n      console.log('log 2 ' + channelId);\n      collection(db.collection('channels').where('channelId', '==', channelIds)).pipe(map(function (v) {\n        console.log('log 3 ' + v);\n        return v[0].data();\n      }));\n    })));\n  }), map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        books = _ref2[0],\n        channels = _ref2[1];\n\n    return books.map(function (book) {\n      return {\n        book: book,\n        channels: channels\n      };\n    }); //return {books, channels};\n  }));\n}\n\nexport { getAllBooks, getAllBooks2 };","map":{"version":3,"sources":["D:/SolutionReactJs/SourceDefault/audio-rodbook/services/book.service.ts"],"names":["collection","map","switchMap","db","Book","Channel","of","combineLatest","BookAndChannel","data","books","nameChannel","getAllBooks","res","limit","pipe","snapshot","doc0","rsd","GetChanelName","val","ob","object","rs","channelId","where","doc1","resChennel","name","getAllBooks2","console","log","channelIds","v","books2","channels","book"],"mappings":"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","sourcesContent":["import { collection, doc, collectionChanges, fromCollectionRef, fromDocRef } from 'rxfire/firestore';\r\nimport { map, switchMap, mergeMap, mergeAll, combineAll } from 'rxjs/operators';\r\n\r\nimport { db } from './firebase.service';\r\nimport { Book } from 'models/book';\r\nimport { Channel } from 'models/channel';\r\nimport { of, BehaviorSubject, combineLatest, from, merge } from 'rxjs';\r\n\r\nclass BookAndChannel {\r\n  books: Book;\r\n  nameChannel: string;\r\n  constructor(data: any = {}) {\r\n    this.books = data.books || null;\r\n    this.nameChannel = data.nameChannel || '';\r\n  }\r\n}\r\n\r\nfunction getAllBooks() {\r\n  let res= collection(db.collection('books').limit(12)).pipe(\r\n    map(snapshot =>\r\n      snapshot.map(doc0 => {\r\n        const rsd= new Book(doc0.data());\r\n        return combineLatest(of(rsd), GetChanelName(doc0.data())).pipe(\r\n          map(val=>{\r\n            let ob=new BookAndChannel({books: val[0], nameChannel: val[1]})\r\n            return ob;\r\n          })\r\n        )\r\n      }),\r\n    )\r\n  );\r\n  return res;\r\n}\r\n\r\nfunction GetChanelName(object){\r\n  let rs= new Book(object);\r\n  let channelId = rs.channelId;\r\n  let res= collection(db.collection('channels').where('channelId', '==', channelId)).pipe(\r\n    map(res => res.map(doc1 => {\r\n      let resChennel = new Channel(doc1.data());\r\n      return resChennel.name;\r\n    }))\r\n  );\r\n  return res;\r\n}\r\n\r\n\r\nfunction getAllBooks2() {\r\n  console.log('function 2')\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n    switchMap(books => {\r\n      const channelIds = books.map(v => v.data()['channelId']);\r\n      console.log('log 1 ' + channelIds[0]);\r\n      const books2 = books.map(v => v.data());\r\n      return combineLatest(of(books2), combineLatest(channelIds.map(channelId => {\r\n        console.log('log 2 ' + channelId)\r\n        collection(db.collection('channels').where('channelId', '==', channelIds)).pipe(map(v => {\r\n          console.log('log 3 ' + v);\r\n          return v[0].data();\r\n        }))\r\n      })))\r\n    }),\r\n    map(([books, channels]) => {\r\n      return books.map(book => {\r\n        return {book, channels}\r\n      })\r\n      //return {books, channels};\r\n    })\r\n  );\r\n}\r\n\r\nexport { getAllBooks, getAllBooks2 };\r\n"]},"metadata":{},"sourceType":"module"}