{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport { collection } from 'rxfire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\nimport { db } from \"./firebase.service\";\nimport { Book } from \"../models/book\";\nimport { Channel } from \"../models/channel\";\nimport { of, BehaviorSubject, combineLatest } from 'rxjs';\n\nvar BookAndChannel = function BookAndChannel() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  _classCallCheck(this, BookAndChannel);\n\n  this.books = data.books || null;\n  this.nameChannel = data.nameChannel || '';\n};\n\nfunction getAllBooks() {\n  var res = collection(db.collection('books').limit(12)).pipe(map(function (snapshot) {\n    return snapshot.map(function (doc0) {\n      var rs = new Book(doc0.data());\n      ;\n      var channelId = rs.channelId;\n      return new BookAndChannel({\n        books: doc0.data(),\n        nameChannel: GetChanelName(channelId)\n      });\n    });\n  }));\n  return res;\n}\n\nfunction GetChanelName(e) {\n  var subject = new BehaviorSubject(\"\");\n  collection(db.collection('channels').where('channelId', '==', e)).pipe(map(function (res) {\n    return res.map(function (doc1) {\n      var resChennel = new Channel(doc1.data());\n      subject.next(resChennel.name);\n    });\n  }));\n  return subject.value;\n}\n\nfunction getAllBooks2() {\n  console.log('function 2');\n  return collection(db.collection('books').limit(12)).pipe(switchMap(function (books) {\n    var channelIds = books.map(function (v) {\n      return v.data()['channelId'];\n    });\n    console.log('log 1 ' + channelIds[0]);\n    return combineLatest(of(books), combineLatest(channelIds.map(function (channelId) {\n      console.log('log 2 ' + channelId);\n      collection(db.collection('channels').where('channelId', '==', channelIds)).pipe(map(function (v) {\n        console.log('log 3 ' + v);\n        return v[0].data().name;\n      }));\n    })));\n  }), map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        books = _ref2[0],\n        channels = _ref2[1];\n\n    console.log(books);\n    console.log(channels);\n    return {\n      books: books,\n      channels: channels\n    };\n  }));\n}\n\nexport { getAllBooks, getAllBooks2 };","map":{"version":3,"sources":["D:/SolutionReactJs/SourceDefault/audio-rodbook/services/book.service.ts"],"names":["collection","map","switchMap","db","Book","Channel","of","BehaviorSubject","combineLatest","BookAndChannel","data","books","nameChannel","getAllBooks","res","limit","pipe","snapshot","doc0","rs","channelId","GetChanelName","e","subject","where","doc1","resChennel","next","name","value","getAllBooks2","console","log","channelIds","v","channels"],"mappings":"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","sourcesContent":["import { collection, doc, collectionChanges, fromCollectionRef, fromDocRef } from 'rxfire/firestore';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { db } from './firebase.service';\r\nimport { Book } from 'models/book';\r\nimport { Channel } from 'models/channel';\r\nimport { of, BehaviorSubject, combineLatest } from 'rxjs';\r\n\r\nclass BookAndChannel {\r\n  books: Book;\r\n  nameChannel: string;\r\n  constructor(data: any = {}) {\r\n    this.books = data.books || null;\r\n    this.nameChannel = data.nameChannel || '';\r\n  }\r\n}\r\n\r\nfunction getAllBooks() {\r\n  let res= collection(db.collection('books').limit(12)).pipe(\r\n    map(snapshot =>\r\n      snapshot.map(doc0 => {\r\n        let rs= new Book(doc0.data());;\r\n        let channelId = rs.channelId;\r\n        return new BookAndChannel({ books: doc0.data(), nameChannel: GetChanelName(channelId) });\r\n      })\r\n    )\r\n  );\r\n  return res;\r\n}\r\n\r\nfunction GetChanelName(e){\r\n  var subject = new BehaviorSubject<string>(\"\");\r\n  collection(db.collection('channels').where('channelId', '==', e)).pipe(\r\n    map(res => res.map(doc1 => {\r\n      let resChennel = new Channel(doc1.data());\r\n      subject.next(resChennel.name);\r\n    }))\r\n  );\r\n  return subject.value;\r\n}\r\n\r\n\r\nfunction getAllBooks2() {\r\n  console.log('function 2')\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n    switchMap(books => {\r\n      const channelIds = books.map(v => v.data()['channelId']);\r\n      console.log('log 1 ' + channelIds[0])\r\n      return combineLatest(of(books), combineLatest(channelIds.map(channelId => {\r\n        console.log('log 2 ' + channelId)\r\n        collection(db.collection('channels').where('channelId', '==', channelIds)).pipe(map(v => {\r\n          console.log('log 3 ' + v);\r\n          return v[0].data().name;\r\n        }))\r\n      })))\r\n    }),\r\n    map(([books, channels]) => {\r\n      console.log(books);\r\n      console.log(channels);\r\n      return {books, channels};\r\n    })\r\n  );\r\n}\r\n\r\nexport { getAllBooks, getAllBooks2 };\r\n"]},"metadata":{},"sourceType":"module"}