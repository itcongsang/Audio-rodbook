{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { collection } from 'rxfire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\nimport { db } from \"./firebase.service\";\nimport { Book } from \"../models/book\";\nimport { Channel } from \"../models/channel\";\nimport { of, BehaviorSubject, combineLatest, from } from 'rxjs'; // class BookAndChannel {\n//   books: Book;\n//   nameChannel: string;\n//   constructor(data: any = {}) {\n//     this.books = data.books || null;\n//     this.nameChannel = data.nameChannel || '';\n//   }\n// }\n\nfunction getAllBooks() {\n  var res = from(collection(db.collection('books').limit(12)).pipe(map(function (snapshot) {\n    return snapshot.map(function (doc0) {\n      var rs = new Book(doc0.data());\n      return rs; // let channelId = rs.channelId;\n      // return collection(db.collection('channels').where('channelId', '==', channelId)).pipe(\n      //   map(res => res.map(doc1 => {\n      //     let resChennel = new Channel(doc1.data()).name;\n      //     return new BookAndChannel({ books: doc0.data(), nameChannel: resChennel });\n      //   }))\n      // );\n    });\n  })));\n  res.pipe(map(function (val) {\n    console.log(val);\n  })).subscribe(function (val) {\n    console.log(val);\n  });\n  return res;\n}\n\nfunction GetChanelName(e) {\n  var subject = new BehaviorSubject(\"\");\n  collection(db.collection('channels').where('channelId', '==', e)).pipe(map(function (res) {\n    return res.map(function (doc1) {\n      var resChennel = new Channel(doc1.data());\n      subject.next(resChennel.name);\n    });\n  }));\n  return subject.value;\n}\n\nfunction getAllBooks2() {\n  console.log('function 2');\n  return collection(db.collection('books').limit(12)).pipe(switchMap(function (books) {\n    var channelIds = books.map(function (v) {\n      return v.data()['channelId'];\n    });\n    console.log('log 1 ' + channelIds[0]);\n    var books2 = books.map(function (v) {\n      return v.data();\n    });\n    return combineLatest(of(books2), combineLatest(channelIds.map(function (channelId) {\n      console.log('log 2 ' + channelId);\n      collection(db.collection('channels').where('channelId', '==', channelIds)).pipe(map(function (v) {\n        console.log('log 3 ' + v);\n        return v[0].data();\n      }));\n    })));\n  }), map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        books = _ref2[0],\n        channels = _ref2[1];\n\n    return books.map(function (book) {\n      return {\n        book: book,\n        channels: channels\n      };\n    }); //return {books, channels};\n  }));\n}\n\nexport { getAllBooks, getAllBooks2 };","map":{"version":3,"sources":["D:/SolutionReactJs/SourceDefault/audio-rodbook/services/book.service.ts"],"names":["collection","map","switchMap","db","Book","Channel","of","BehaviorSubject","combineLatest","from","getAllBooks","res","limit","pipe","snapshot","doc0","rs","data","val","console","log","subscribe","GetChanelName","e","subject","where","doc1","resChennel","next","name","value","getAllBooks2","books","channelIds","v","books2","channelId","channels","book"],"mappings":"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","sourcesContent":["import { collection, doc, collectionChanges, fromCollectionRef, fromDocRef } from 'rxfire/firestore';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { db } from './firebase.service';\r\nimport { Book } from 'models/book';\r\nimport { Channel } from 'models/channel';\r\nimport { of, BehaviorSubject, combineLatest, from } from 'rxjs';\r\n\r\n// class BookAndChannel {\r\n//   books: Book;\r\n//   nameChannel: string;\r\n//   constructor(data: any = {}) {\r\n//     this.books = data.books || null;\r\n//     this.nameChannel = data.nameChannel || '';\r\n//   }\r\n// }\r\n\r\nfunction getAllBooks() {\r\n  let res= from (collection(db.collection('books').limit(12)).pipe(\r\n    map(snapshot =>\r\n      snapshot.map(doc0 => {\r\n        let rs= new Book(doc0.data());\r\n        return rs;\r\n        // let channelId = rs.channelId;\r\n        // return collection(db.collection('channels').where('channelId', '==', channelId)).pipe(\r\n        //   map(res => res.map(doc1 => {\r\n        //     let resChennel = new Channel(doc1.data()).name;\r\n        //     return new BookAndChannel({ books: doc0.data(), nameChannel: resChennel });\r\n        //   }))\r\n        // );\r\n      })\r\n    )\r\n  ));\r\n  res.pipe(map(val=>{console.log(val)})).subscribe(val=>{console.log(val)})\r\n  return res;\r\n}\r\n\r\nfunction GetChanelName(e){\r\n  var subject = new BehaviorSubject<string>(\"\");\r\n  collection(db.collection('channels').where('channelId', '==', e)).pipe(\r\n    map(res => res.map(doc1 => {\r\n      let resChennel = new Channel(doc1.data());\r\n      subject.next(resChennel.name);\r\n    }))\r\n  );\r\n  return subject.value;\r\n}\r\n\r\n\r\nfunction getAllBooks2() {\r\n  console.log('function 2')\r\n  return collection(db.collection('books').limit(12)).pipe(\r\n    switchMap(books => {\r\n      const channelIds = books.map(v => v.data()['channelId']);\r\n      console.log('log 1 ' + channelIds[0]);\r\n      const books2 = books.map(v => v.data());\r\n      return combineLatest(of(books2), combineLatest(channelIds.map(channelId => {\r\n        console.log('log 2 ' + channelId)\r\n        collection(db.collection('channels').where('channelId', '==', channelIds)).pipe(map(v => {\r\n          console.log('log 3 ' + v);\r\n          return v[0].data();\r\n        }))\r\n      })))\r\n    }),\r\n    map(([books, channels]) => {\r\n      return books.map(book => {\r\n        return {book, channels}\r\n      })\r\n      //return {books, channels};\r\n    })\r\n  );\r\n}\r\n\r\nexport { getAllBooks, getAllBooks2 };\r\n"]},"metadata":{},"sourceType":"module"}